apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mastodon-coolmathgames-helm
  namespace: argocd
spec:
  destination:
    namespace: mastodon-coolmathgames
    server: https://kubernetes.default.svc
  project: erin-apps
  source:
    repoURL: https://github.com/general-programming/mastodon-chart.git
    path: "."
    targetRevision: "568cbb4d5fb58c5383deae6f887988ee9622905d"

    helm:
      valuesObject:
        image:
          repository: ghcr.io/theessem/mastodon
          # renovate: datasource=docker depName=ghcr.io/theessem/mastodon
          tag: nightly.2024-07-20
        
        mastodon:
          # streaming config
          streaming:
            image:
              repository: ghcr.io/theessem/mastodon-streaming
              # renovate: datasource=docker depName=ghcr.io/theessem/mastodon-streaming
              tag: nightly.2024-07-20
            
            replicas: 3

          # very IMPORTANT
          local_domain: coolmathgam.es

          # add extra vars
          extraEnvVars:
            EXTRA_DATA_HOSTS: "https://blob.jortage.com"

          # add SECRET_KEY_BASE, OTP_SECRET, VAPID_PRIVATE_KEY, VAPID_PUBLIC_KEY to vault
          secrets:
            existingSecret: mastodon-secrets

          # storage config
          s3:
            enabled: true
            # add AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY to vault
            existingSecret: mastodon-s3
            bucket: coolmathgames
            endpoint: https://pool-api.jortage.com
            hostname: pool-api.jortage.com
            region: jort
            alias_host: pool.jortage.com/coolmathgames

          # shamelessly copied from values
          sidekiq:
            workers:
              # "Make sure the scheduler queue only exists once and with a worker that has 1 replica."
              - name: scheduler
                concurrency: 25
                replicas: 1
                resources: {}
                affinity: {}
                topologySpreadConstraints: {}
                queues:
                  - scheduler
                image:
                  repository:
                  tag:
                customDatabaseConfigYml:
                  configMapRef:
                    name:
                    key:
              # everything else
              - name: all-queues
                concurrency: 25
                replicas: 3
                resources: {}
                affinity: {}
                topologySpreadConstraints: {}
                queues:
                  - default,8
                  - push,6
                  - ingress,4
                  - mailers,2
                  - pull
                image:
                  repository:
                  tag:
                # allows you to mount a custom database.yml from a configmap
                # please note that we do not advise using a read-only replica for sidekiq workers
                customDatabaseConfigYml:
                  configMapRef:
                    name:
                    key:

          smtp:
            server: smtp.sendgrid.net
            port: 587
            # login + password set in vault
            existingSecret: mastodon-smtp
            from_address: automated@coolmathgam.es
          
          web:
            replicas: 3
          
          hooks:
            dbMigrate:
              enabled: true
            assetsPrecompile:
              enabled: false

          metrics:
            statsd:
              exporter:
                enabled: true

        ingress:
          annotations:
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.tls: "true"

          hosts:
            - host: coolmathgam.es
              paths:
                - path: "/"
          
          tls: null

          streaming:
            tls: null
        
        redis:
          volumePermissions:
            enabled: true

          auth:
            password: "this_is_insecure_but_it_is_redis_so_who_cares"

          replica:
            replicaCount: 3
        
        elasticsearch:
          preset: small_cluster

          metrics:
            enabled: true

          master:
            replicaCount: 3
            heapSize: 1g
          
          data:
            replicaCount: 3
            heapSize: 2g

          coordinating:
            replicaCount: 0
          
          ingest:
            enabled: false
            replicaCount: 0
          
        postgresql:
          enabled: false
          postgresqlHostname: primary.16-sea1.service.consul
          postgresqlPort: "5433"
          auth:
            database: mastodon_coolmathgames
            username: mastodon_coolmathgames
            # password in vault
            existingSecret: mastodon-postgres
          # readReplica:
          #   hostname: replica.16-sea1.service.consul
          #   port: 5433
          #   auth:
          #     database: mastodon_coolmathgames
          #     username: mastodon_coolmathgames
          #     existingSecret: mastodon-postgres
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - allowEmpty=true
      - ServerSideApply=true
